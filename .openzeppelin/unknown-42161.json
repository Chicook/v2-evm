{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xB853c09b6d03098b841300daD57701ABcFA80228",
    "txHash": "0xb21d1bce2da04b1b51fabb774ddb376bb919525f2cf0da53d7df5e00d3de424c"
  },
  "proxies": [
    {
      "address": "0xEB27B05178515c7E6E51dEE159c8487A011ac030",
      "txHash": "0x04fd5ebde1eb22710ead090ef5f486420e177b4a77318cab257345abacc229b4",
      "kind": "transparent"
    },
    {
      "address": "0x4c08D11Bc95075AD992Bd7A5776D0D9813E264d5",
      "txHash": "0xaf62c1590abd270a9e9f6ce3eb3736ab9be450fcc3d3de865be4a3e74826d47b",
      "kind": "transparent"
    },
    {
      "address": "0x7AAF085e43f059105F7e1ECc525E8142fF962159",
      "txHash": "0xace54e45d90b3af33f5882168c095f6c0411aa6722209dd93c99d2ec15f9d2bd",
      "kind": "transparent"
    },
    {
      "address": "0xFc41505F4e24345E3797b6730a948a2B03a5eC5e",
      "txHash": "0x3f2170768256eac92cc3b21176be975dcab589f30b0c2edecd477a3b776e2d24",
      "kind": "transparent"
    },
    {
      "address": "0x417B34E90990657BF6adC1Ecc2ac4B36069cc927",
      "txHash": "0xb27d5ac13475eeb25f6d213b31cfc9ada06b4ee7873c86251abac45c97cf429b",
      "kind": "transparent"
    },
    {
      "address": "0x995F553c6EF760ACB6EED102b376c3f159014e3c",
      "txHash": "0xab75ee55f72070c3ae5e72e08caaf9c9fe10aea9774ba75bfd9df63b8596f619",
      "kind": "transparent"
    },
    {
      "address": "0x28826219ffb76aa41a56a40e875709391795e512",
      "txHash": "0xe6761fd02eefbd0d2226e37b13addb5a4c655b8f1315543a2827a4ebbd7cb0ca",
      "kind": "transparent"
    },
    {
      "address": "0x68DaEB1C169d16395Bd03C2d0776A3e54015323e",
      "txHash": "0x0675bfad65d48c83a469e8b3061306a252fc96b578fbbdfdc42c94a0b72eddd8",
      "kind": "transparent"
    },
    {
      "address": "0xfc51C8c673C27e1b3D89688ef46D706A77CA28DB",
      "txHash": "0x6d6d2959e003b09933d456cd6f9380b18491e0ef5b9e34f750dd8d28babbb273",
      "kind": "transparent"
    },
    {
      "address": "0x4D9DF83C94c54F75aC2870514C2AD72047f96BB8",
      "txHash": "0xe16e221d4bbf45f7ac7455e3df621722edca8347c11d6b4d2468a3a75314b2d2",
      "kind": "transparent"
    },
    {
      "address": "0x35A301796949f5235f8fc3311E6013450aaf2354",
      "txHash": "0x9091a003f8ac8576ba7330afbacb5b8aa357eda99d8268f94ccd25e3696664f9",
      "kind": "transparent"
    },
    {
      "address": "0xb88771661eFE5a1577Ce0366540dCe33279aD8Cd",
      "txHash": "0xb657038312ffa0f75bd72262e2b52d3f205a0058a27ea7683116eff6608956c4",
      "kind": "transparent"
    },
    {
      "address": "0xC98966b9A3236e4d82FBcDe94f0Df257b5033c4C",
      "txHash": "0x1ec42cefb3d201df54f7b89b23aab0155cacfa3fe6ac8b431f9cedd646f0768d",
      "kind": "transparent"
    },
    {
      "address": "0xFd89a05652492D748a94cD24c636e33054E9F4c2",
      "txHash": "0x7e3dbc7b5cfb1c44de647dcb8235417ac63410aadfa4e304c4f7c6a41d2f9b8e",
      "kind": "transparent"
    },
    {
      "address": "0x34eFfFEdbD326796256B4C253dC3F8F1dfe23D63",
      "txHash": "0x8ff69643a99370f03e53db4f9614c10a265966575be341973c4f4945ec7ad6fd",
      "kind": "transparent"
    },
    {
      "address": "0xb4D3b20c2AF9dB32ef86f301F1CD4B5E92b1D1e1",
      "txHash": "0x1671473a3801c3d37b464f15c499af73914f702a1705edaa7252eb4129a0b595",
      "kind": "transparent"
    },
    {
      "address": "0x2BBFD6845156845f1f6BB37D91519C2c1c2E2C85",
      "txHash": "0x1e8b44904ebdf4eda1061f17cc37fe8b4403b6b876d06ee5e83f2f7f5413c3c9",
      "kind": "transparent"
    },
    {
      "address": "0x6c099BFD7fD91DbA514dc1169A85fD9D6659Ad03",
      "txHash": "0x05901f7a4167eea1a13d4af697ece4b2941114f5269d26543197e73c74aed1cd",
      "kind": "transparent"
    },
    {
      "address": "0xD2Ac023a1ca98795eC9b73F787CE06aDF0B22209",
      "txHash": "0x33ea112505cb4cd2203cd32abe8db09fe94c62c2b6daca5bfd214ee0ff62b892",
      "kind": "transparent"
    },
    {
      "address": "0xfAE1131D79E9B13CA11c3Fb3D7b588D8Fa44401c",
      "txHash": "0xfabaa43347e866be567884d7a78b5058a81ad7328631db3ec65077e9428b6b57",
      "kind": "transparent"
    }
  ],
  "impls": {
    "92ddc9ee90a8db88336adf3fdf23d7bf6192e7653505a218c8e20cfea890640f": {
      "address": "0xc88322Ec9526A7A98B7F58ff773b3B003C91ce71",
      "txHash": "0xca6dd41f74525b1903edfe1eb5cf70e1ea018240f6c8782fde7530e1decfde8b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "prices",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:24"
          },
          {
            "label": "minPublishTime",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:28"
          },
          {
            "label": "publishTimeDiff",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:31"
          },
          {
            "label": "mapAssetIdToIndex",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:33"
          },
          {
            "label": "assetIds",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:34"
          },
          {
            "label": "indexCount",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:35"
          },
          {
            "label": "isUpdaters",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8f1b61670603faac415cc98d7113e22ea9850f1437c3433808fc309557ffdca3": {
      "address": "0x20E58fC5E1ee3C596fb3ebD6de6040e7800e82E6",
      "txHash": "0x9c798f92350427449a042352110978491886a8c800b34c4e72b264d8bb26b901",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IReadablePyth)41226",
            "contract": "PythAdapter",
            "src": "src/oracles/PythAdapter.sol:18"
          },
          {
            "label": "configs",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_bytes32,t_struct(PythPriceConfig)41178_storage)",
            "contract": "PythAdapter",
            "src": "src/oracles/PythAdapter.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IReadablePyth)41226": {
            "label": "contract IReadablePyth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_struct(PythPriceConfig)41178_storage)": {
            "label": "mapping(bytes32 => struct IPythAdapter.PythPriceConfig)",
            "numberOfBytes": "32"
          },
          "t_struct(PythPriceConfig)41178_storage": {
            "label": "struct IPythAdapter.PythPriceConfig",
            "members": [
              {
                "label": "pythPriceId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inverse",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d90d00ac9b054519202a0c4e7b4a9c4d890c2103065cb8d0412d7e68141414b1": {
      "address": "0x8D715a015aC0e064a3Cfb88DA755d346Aee65433",
      "txHash": "0x0d4f41cd0f226d403d079c2903fa68cfaeab1df63e73534138c7512de56f0d79",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "sGlp",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)9159",
            "contract": "StakedGlpOracleAdapter",
            "src": "src/oracles/StakedGlpOracleAdapter.sol:14"
          },
          {
            "label": "glpManager",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IGmxGlpManager)36112",
            "contract": "StakedGlpOracleAdapter",
            "src": "src/oracles/StakedGlpOracleAdapter.sol:15"
          },
          {
            "label": "sGlpAssetId",
            "offset": 0,
            "slot": "103",
            "type": "t_bytes32",
            "contract": "StakedGlpOracleAdapter",
            "src": "src/oracles/StakedGlpOracleAdapter.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)9159": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IGmxGlpManager)36112": {
            "label": "contract IGmxGlpManager",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "112fccf81852ba0a0c671b3429474940a3a3afd58d397ba1ffa37040a6424514": {
      "address": "0x4Dc3c929DDa7451012F408d1f376221621dD2a56",
      "txHash": "0x669111e8b4eeaaa6aab3781ffa791b9e234dcdcdf49b888166a540f4ec71bf7c",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "isUpdater",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "OracleMiddleware",
            "src": "src/oracles/OracleMiddleware.sol:47"
          },
          {
            "label": "assetPriceConfigs",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_bytes32,t_struct(AssetPriceConfig)39006_storage)",
            "contract": "OracleMiddleware",
            "src": "src/oracles/OracleMiddleware.sol:48"
          },
          {
            "label": "marketStatus",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "contract": "OracleMiddleware",
            "src": "src/oracles/OracleMiddleware.sol:60"
          },
          {
            "label": "maxTrustPriceAge",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "OracleMiddleware",
            "src": "src/oracles/OracleMiddleware.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AssetPriceConfig)39006_storage)": {
            "label": "mapping(bytes32 => struct OracleMiddleware.AssetPriceConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)",
            "numberOfBytes": "32"
          },
          "t_struct(AssetPriceConfig)39006_storage": {
            "label": "struct OracleMiddleware.AssetPriceConfig",
            "members": [
              {
                "label": "trustPriceAge",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "confidenceThresholdE6",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "adapter",
                "type": "t_address",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "76ef8079b5972d888f39187e95284f091d1c4cc5873ebba2d0b736a50219cde9": {
      "address": "0xC4605B61675654396f3b77F9D4c3bE661fa0d873",
      "txHash": "0x0143f8c0c8fee34cb6b79a3ad92871f8b57b446fa193af35179675b70b9f3b7d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "liquidityConfig",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(LiquidityConfig)56491_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:59"
          },
          {
            "label": "swapConfig",
            "offset": 0,
            "slot": "103",
            "type": "t_struct(SwapConfig)56496_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:60"
          },
          {
            "label": "tradingConfig",
            "offset": 0,
            "slot": "104",
            "type": "t_struct(TradingConfig)56505_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:61"
          },
          {
            "label": "liquidationConfig",
            "offset": 0,
            "slot": "107",
            "type": "t_struct(LiquidationConfig)56508_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:62"
          },
          {
            "label": "allowedLiquidators",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:64"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:65"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:67"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:68"
          },
          {
            "label": "hlp",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:69"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "113",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:70"
          },
          {
            "label": "pnlFactorBPS",
            "offset": 20,
            "slot": "113",
            "type": "t_uint32",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:71"
          },
          {
            "label": "minimumPositionSize",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:72"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "115",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:73"
          },
          {
            "label": "sglp",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:74"
          },
          {
            "label": "tokenAssetIds",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:77"
          },
          {
            "label": "assetConfigs",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_bytes32,t_struct(AssetConfig)56422_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:79"
          },
          {
            "label": "hlpAssetIds",
            "offset": 0,
            "slot": "119",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:81"
          },
          {
            "label": "assetHlpTokenConfigs",
            "offset": 0,
            "slot": "120",
            "type": "t_mapping(t_bytes32,t_struct(HLPTokenConfig)56431_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:82"
          },
          {
            "label": "collateralAssetIds",
            "offset": 0,
            "slot": "121",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:84"
          },
          {
            "label": "assetCollateralTokenConfigs",
            "offset": 0,
            "slot": "122",
            "type": "t_mapping(t_bytes32,t_struct(CollateralTokenConfig)56438_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:85"
          },
          {
            "label": "marketConfigs",
            "offset": 0,
            "slot": "123",
            "type": "t_array(t_struct(MarketConfig)56469_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:87"
          },
          {
            "label": "assetClassConfigs",
            "offset": 0,
            "slot": "124",
            "type": "t_array(t_struct(AssetClassConfig)56472_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:88"
          },
          {
            "label": "tradeServiceHooks",
            "offset": 0,
            "slot": "125",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:89"
          },
          {
            "label": "configExecutors",
            "offset": 0,
            "slot": "126",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:91"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(AssetClassConfig)56472_storage)dyn_storage": {
            "label": "struct IConfigStorage.AssetClassConfig[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MarketConfig)56469_storage)dyn_storage": {
            "label": "struct IConfigStorage.MarketConfig[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AssetConfig)56422_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.AssetConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(CollateralTokenConfig)56438_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.CollateralTokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(HLPTokenConfig)56431_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.HLPTokenConfig)",
            "numberOfBytes": "32"
          },
          "t_struct(AssetClassConfig)56472_storage": {
            "label": "struct IConfigStorage.AssetClassConfig",
            "members": [
              {
                "label": "baseBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(AssetConfig)56422_storage": {
            "label": "struct IConfigStorage.AssetConfig",
            "members": [
              {
                "label": "tokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "decimals",
                "type": "t_uint8",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isStableCoin",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CollateralTokenConfig)56438_storage": {
            "label": "struct IConfigStorage.CollateralTokenConfig",
            "members": [
              {
                "label": "settleStrategy",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "collateralFactorBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 24,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FundingRate)56443_storage": {
            "label": "struct IConfigStorage.FundingRate",
            "members": [
              {
                "label": "maxSkewScaleUSD",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxFundingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(HLPTokenConfig)56431_storage": {
            "label": "struct IConfigStorage.HLPTokenConfig",
            "members": [
              {
                "label": "targetWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "bufferLiquidity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxWeightDiff",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(LiquidationConfig)56508_storage": {
            "label": "struct IConfigStorage.LiquidationConfig",
            "members": [
              {
                "label": "liquidationFeeUSDE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LiquidityConfig)56491_storage": {
            "label": "struct IConfigStorage.LiquidityConfig",
            "members": [
              {
                "label": "hlpTotalTokenWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "hlpSafetyBufferBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taxFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "flashLoanFeeRateBPS",
                "type": "t_uint32",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "maxHLPUtilizationBPS",
                "type": "t_uint32",
                "offset": 12,
                "slot": "1"
              },
              {
                "label": "depositFeeRateBPS",
                "type": "t_uint32",
                "offset": 16,
                "slot": "1"
              },
              {
                "label": "withdrawFeeRateBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "dynamicFeeEnabled",
                "type": "t_bool",
                "offset": 24,
                "slot": "1"
              },
              {
                "label": "enabled",
                "type": "t_bool",
                "offset": 25,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MarketConfig)56469_storage": {
            "label": "struct IConfigStorage.MarketConfig",
            "members": [
              {
                "label": "assetId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxLongPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxShortPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "increasePositionFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "decreasePositionFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "3"
              },
              {
                "label": "initialMarginFractionBPS",
                "type": "t_uint32",
                "offset": 8,
                "slot": "3"
              },
              {
                "label": "maintenanceMarginFractionBPS",
                "type": "t_uint32",
                "offset": 12,
                "slot": "3"
              },
              {
                "label": "maxProfitRateBPS",
                "type": "t_uint32",
                "offset": 16,
                "slot": "3"
              },
              {
                "label": "assetClass",
                "type": "t_uint8",
                "offset": 20,
                "slot": "3"
              },
              {
                "label": "allowIncreasePosition",
                "type": "t_bool",
                "offset": 21,
                "slot": "3"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 22,
                "slot": "3"
              },
              {
                "label": "fundingRate",
                "type": "t_struct(FundingRate)56443_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(SwapConfig)56496_storage": {
            "label": "struct IConfigStorage.SwapConfig",
            "members": [
              {
                "label": "stablecoinSwapFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "swapFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TradingConfig)56505_storage": {
            "label": "struct IConfigStorage.TradingConfig",
            "members": [
              {
                "label": "fundingInterval",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minProfitDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "devFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPosition",
                "type": "t_uint8",
                "offset": 4,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c5d1f20e0a03c141f279eab32ab4fd218a222e7ac170f9725a27b0f5e27aec1d": {
      "address": "0x029c919Cf951C588819Acb7d95eeC1780E53f89C",
      "txHash": "0xd6c2054c4f910dd064ebc2338aaa7f97e3cc4ceb3f080b8555ed05b16379db8f",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "globalState",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(GlobalState)56883_storage",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:32"
          },
          {
            "label": "positions",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_struct(Position)56938_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:34"
          },
          {
            "label": "subAccountPositionIds",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:35"
          },
          {
            "label": "subAccountBorrowingFee",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:36"
          },
          {
            "label": "markets",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_struct(Market)56917_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:37"
          },
          {
            "label": "assetClasses",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_uint256,t_struct(AssetClass)56894_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:38"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:39"
          },
          {
            "label": "activePositionIds",
            "offset": 0,
            "slot": "158",
            "type": "t_struct(Bytes32Set)16614_storage",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:41"
          },
          {
            "label": "activeSubAccounts",
            "offset": 0,
            "slot": "160",
            "type": "t_struct(AddressSet)16735_storage",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Position)56938_storage)": {
            "label": "mapping(bytes32 => struct IPerpStorage.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AssetClass)56894_storage)": {
            "label": "mapping(uint256 => struct IPerpStorage.AssetClass)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Market)56917_storage)": {
            "label": "mapping(uint256 => struct IPerpStorage.Market)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)16735_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)16420_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(AssetClass)56894_storage": {
            "label": "struct IPerpStorage.AssetClass",
            "members": [
              {
                "label": "reserveValueE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sumBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastBorrowingTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "sumBorrowingFeeE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sumSettledBorrowingFeeE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Bytes32Set)16614_storage": {
            "label": "struct EnumerableSet.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)16420_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(GlobalState)56883_storage": {
            "label": "struct IPerpStorage.GlobalState",
            "members": [
              {
                "label": "reserveValueE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Market)56917_storage": {
            "label": "struct IPerpStorage.Market",
            "members": [
              {
                "label": "longPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "longAccumSE",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "longAccumS2E",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "shortPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "shortAccumSE",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "shortAccumS2E",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "currentFundingRate",
                "type": "t_int256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "lastFundingTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "accumFundingLong",
                "type": "t_int256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "accumFundingShort",
                "type": "t_int256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "fundingAccrued",
                "type": "t_int256",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Position)56938_storage": {
            "label": "struct IPerpStorage.Position",
            "members": [
              {
                "label": "primaryAccount",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "avgEntryPriceE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "entryBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "reserveValueE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastIncreaseTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "positionSizeE30",
                "type": "t_int256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "realizedPnl",
                "type": "t_int256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "lastFundingAccrued",
                "type": "t_int256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)16420_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0ce9a45b930a3178664a9ea68248adeda57b8ef31dd69dd55fff3a518035d328": {
      "address": "0xCB1EaA1E9Fd640c3900a4325440c80FEF4b1b16d",
      "txHash": "0xcead25d7b3829062a74ec4a67880f805843f600d66c844a9575e571a5ff01b53",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "154",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "155",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "minters",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "HLP",
            "src": "src/contracts/HLP.sol:12"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "52f4df72a4d3c12ed84e86280b6c864a87b38cffa784691d3d40ce51ce53b41d": {
      "address": "0x3f78cEc168AdF9242a3d2F04A0ab1E312c26b3Ec",
      "txHash": "0xdc4cfb9cc7d3f6390978b2a06e88451cb736cf2f4143ce7aaa19d686700b18b3",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "totalAmount",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:36"
          },
          {
            "label": "hlpLiquidity",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:37"
          },
          {
            "label": "protocolFees",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:38"
          },
          {
            "label": "hlpLiquidityDebtUSDE30",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:40"
          },
          {
            "label": "fundingFeeReserve",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:41"
          },
          {
            "label": "devFees",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:43"
          },
          {
            "label": "tradingFeeDebt",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:45"
          },
          {
            "label": "borrowingFeeDebt",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:46"
          },
          {
            "label": "fundingFeeDebt",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:47"
          },
          {
            "label": "lossDebt",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:48"
          },
          {
            "label": "globalTradingFeeDebt",
            "offset": 0,
            "slot": "161",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:50"
          },
          {
            "label": "globalBorrowingFeeDebt",
            "offset": 0,
            "slot": "162",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:51"
          },
          {
            "label": "globalFundingFeeDebt",
            "offset": 0,
            "slot": "163",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:52"
          },
          {
            "label": "globalLossDebt",
            "offset": 0,
            "slot": "164",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:53"
          },
          {
            "label": "traderBalances",
            "offset": 0,
            "slot": "165",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:56"
          },
          {
            "label": "traderTokens",
            "offset": 0,
            "slot": "166",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:58"
          },
          {
            "label": "strategyAllowances",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:60"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "168",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:62"
          },
          {
            "label": "strategyFunctionSigAllowances",
            "offset": 0,
            "slot": "169",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bytes4))",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes4)": {
            "label": "mapping(address => bytes4)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bytes4))": {
            "label": "mapping(address => mapping(address => bytes4))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "34b4702559190b012b139cc99971787e3709fab35c5d3ab43e38b8dd7295712e": {
      "address": "0xf944690f3B7436161BA27B47799Bd06EA4154C0e",
      "txHash": "0x77bc94d213f1a357837a145cea4c195f1447955299baa74df77fab1e3a6d44cc",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:40"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:41"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:42"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d28e8ea686e016293706d1b8aa8b5094ba1e244c8fd6830216a2d1bc5be373d2": {
      "address": "0xA227221350f1D0Ca119be424710aCD9df89151c3",
      "txHash": "0xb3860ac1287bb5784145fc62200be96d1aa03a9b0beb6f1777ade2f58baa19ae",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:163"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:164"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:165"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(Calculator)23198",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:166"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Calculator)23198": {
            "label": "contract Calculator",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "67dc1b0ee3a6f06489088520aa7dccfef65cacc436bae32370b39a423b195381": {
      "address": "0xDfc82d68Bb9B715a7DDFE80F2074E86958129B18",
      "txHash": "0x38a3cdb99454ee503b9ea1ce32cdfa47349bcc7b96b4002e3ba082794a561884",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "sglp",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)9159",
            "contract": "ConvertedGlpStrategy",
            "src": "src/strategies/ConvertedGlpStrategy.sol:20"
          },
          {
            "label": "rewardRouter",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IGmxRewardRouterV2)36150",
            "contract": "ConvertedGlpStrategy",
            "src": "src/strategies/ConvertedGlpStrategy.sol:22"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IVaultStorage)57314",
            "contract": "ConvertedGlpStrategy",
            "src": "src/strategies/ConvertedGlpStrategy.sol:23"
          },
          {
            "label": "whitelistExecutors",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConvertedGlpStrategy",
            "src": "src/strategies/ConvertedGlpStrategy.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)9159": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IGmxRewardRouterV2)36150": {
            "label": "contract IGmxRewardRouterV2",
            "numberOfBytes": "20"
          },
          "t_contract(IVaultStorage)57314": {
            "label": "contract IVaultStorage",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fbdc140e9836c03dbed4a90f331c0b3e7dc526bd9f7de574a4bbd7630c1e51df": {
      "address": "0x97337D7F0d90dC766D7D452B677F95197dAe494f",
      "txHash": "0xf5fa120d7600cc245c22529493eb6bd0e1715c5efe193d373f5165ce009a5149",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:72"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:73"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:74"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:75"
          },
          {
            "label": "convertedSglpStrategy",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:76"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d9aa3d6ed26cb72bbfa0d5cd7550d23eda054bbc79e5037c8041e373b96d8f08": {
      "address": "0xE24748F48640A04d0996B8EB92900Fe5bD11E2e1",
      "txHash": "0x97becf639cc193c60ff961033c1826c9d856832e4aa0fe2295e2bd6b41ad3160",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:101"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:102"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:103"
          },
          {
            "label": "tradeHelper",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:104"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(Calculator)23198",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:105"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Calculator)23198": {
            "label": "contract Calculator",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9ae51a7645d40e25cda15c2eb16bc99c27a68367762886e5e3b9acd8d24cb446": {
      "address": "0xEf06f7a07400dcb66deC083568E6De341Fd3E642",
      "txHash": "0xec1255bfa674db1a8477210f2e241f5f4b95d7377fd82e6dfd9929b5cc5ef55f",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LiquidityService",
            "src": "src/services/LiquidityService.sol:74"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LiquidityService",
            "src": "src/services/LiquidityService.sol:75"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "LiquidityService",
            "src": "src/services/LiquidityService.sol:76"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2fc610f78e172189ef8f76cee8f4519bcbf1468cc161034ce2b6568cf18b3977": {
      "address": "0xAaDc4f7C113679ba1e997D45cd6524599F0bB6AE",
      "txHash": "0xf84f4eb2cc0f090f05c8cba635cfa7dc7c81f61a53207d1fce6434c68ae16ba5",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:170"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:171"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:172"
          },
          {
            "label": "tradeHelper",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:173"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(Calculator)23198",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:174"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Calculator)23198": {
            "label": "contract Calculator",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bf127c3e86f1be0a9788ae9c99ec942bb31f626db0faa7ffb5fb4bbda7376dfe": {
      "address": "0x9abDC95bfc8A3Ca274e8a9B9a31297023a061bE8",
      "txHash": "0xea552e7467c2961b1102ae47c48f41b651ed8071c31b24bd9446bfdeeb12e4fb",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "positionManagers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:71"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:72"
          },
          {
            "label": "liquidationService",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:73"
          },
          {
            "label": "crossMarginService",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:74"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:75"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b203582ed5e2555680bc0c563db0d19727258bdfd90d055024f7d18a843da7af": {
      "address": "0xC9C61E8b1695c816Ac5C398639d7a459df5aE000",
      "txHash": "0x942ec16204efec024ecd909c245e602b5ec53eae8fad6b99238e511ddb269b79",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "crossMarginService",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:82"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:83"
          },
          {
            "label": "nextExecutionOrderIndex",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:84"
          },
          {
            "label": "minExecutionOrderFee",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:85"
          },
          {
            "label": "maxExecutionChuck",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:86"
          },
          {
            "label": "withdrawOrders",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_struct(WithdrawOrder)32379_storage)dyn_storage",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:88"
          },
          {
            "label": "subAccountExecutedWithdrawOrders",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_array(t_struct(WithdrawOrder)32379_storage)dyn_storage)",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:89"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:90"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(WithdrawOrder)32379_storage)dyn_storage": {
            "label": "struct ICrossMarginHandler.WithdrawOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CrossMarginService)42317": {
            "label": "contract CrossMarginService",
            "numberOfBytes": "20"
          },
          "t_enum(WithdrawOrderStatus)32354": {
            "label": "enum ICrossMarginHandler.WithdrawOrderStatus",
            "members": [
              "PENDING",
              "SUCCESS",
              "FAIL"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(WithdrawOrder)32379_storage)dyn_storage)": {
            "label": "mapping(address => struct ICrossMarginHandler.WithdrawOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawOrder)32379_storage": {
            "label": "struct ICrossMarginHandler.WithdrawOrder",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint48",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "executedTimestamp",
                "type": "t_uint48",
                "offset": 6,
                "slot": "3"
              },
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 12,
                "slot": "3"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "crossMarginService",
                "type": "t_contract(CrossMarginService)42317",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "status",
                "type": "t_enum(WithdrawOrderStatus)32354",
                "offset": 21,
                "slot": "5"
              },
              {
                "label": "shouldUnwrap",
                "type": "t_bool",
                "offset": 22,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "830e4ec6c2d91e996af5e54d39be3c176f4b4ade0c79c88ec93d98e5f00cd673": {
      "address": "0x230764c6c192C0313bea5E5fa7118Fb46268443c",
      "txHash": "0x1d72ceaeb548a9e0379633fa29a2da386337c9ad62bdbb72934c2bfcd287c9cc",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IEcoPyth)40831",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:145"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:146"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:147"
          },
          {
            "label": "senderOverride",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:148"
          },
          {
            "label": "minExecutionFee",
            "offset": 20,
            "slot": "154",
            "type": "t_uint64",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:150"
          },
          {
            "label": "minExecutionTimestamp",
            "offset": 28,
            "slot": "154",
            "type": "t_uint32",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:151"
          },
          {
            "label": "isAllowAllExecutor",
            "offset": 0,
            "slot": "155",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:152"
          },
          {
            "label": "isGuaranteeLimitPrice",
            "offset": 1,
            "slot": "155",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:153"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:155"
          },
          {
            "label": "limitOrders",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)32592_storage))",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:156"
          },
          {
            "label": "limitOrdersIndex",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:157"
          },
          {
            "label": "delegations",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_address)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:158"
          },
          {
            "label": "activeOrderPointers",
            "offset": 0,
            "slot": "160",
            "type": "t_struct(UintSet)16892_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:161"
          },
          {
            "label": "activeMarketOrderPointers",
            "offset": 0,
            "slot": "162",
            "type": "t_struct(UintSet)16892_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:162"
          },
          {
            "label": "activeLimitOrderPointers",
            "offset": 0,
            "slot": "164",
            "type": "t_struct(UintSet)16892_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:163"
          },
          {
            "label": "subAccountActiveOrderPointers",
            "offset": 0,
            "slot": "166",
            "type": "t_mapping(t_address,t_struct(UintSet)16892_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:165"
          },
          {
            "label": "subAccountActiveMarketOrderPointers",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_struct(UintSet)16892_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:166"
          },
          {
            "label": "subAccountActiveLimitOrderPointers",
            "offset": 0,
            "slot": "168",
            "type": "t_mapping(t_address,t_struct(UintSet)16892_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:167"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IEcoPyth)40831": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)32592_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ILimitTradeHandler.LimitOrder))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)16892_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LimitOrder)32592_storage)": {
            "label": "mapping(uint256 => struct ILimitTradeHandler.LimitOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(LimitOrder)32592_storage": {
            "label": "struct ILimitTradeHandler.LimitOrder",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tpToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "triggerAboveThreshold",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "reduceOnly",
                "type": "t_bool",
                "offset": 21,
                "slot": "1"
              },
              {
                "label": "sizeDelta",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "orderIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "acceptablePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)16420_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)16892_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)16420_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9cac7ee6af06d3f127c332fa4b50d9631c86cfcd74c4169c7400b7822bba4ff0": {
      "address": "0xc5883f6bb849B37b06ceEeE9AAc5018bA978992E",
      "txHash": "0x5595a025e8e1d358aa3e6fe17e074f99a81dde91836a5ccf89e732f5bbed882a",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "liquidityService",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:83"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:84"
          },
          {
            "label": "nextExecutionOrderIndex",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:85"
          },
          {
            "label": "minExecutionOrderFee",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:86"
          },
          {
            "label": "maxExecutionChunk",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:87"
          },
          {
            "label": "liquidityOrders",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_struct(LiquidityOrder)32942_storage)dyn_storage",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:89"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:90"
          },
          {
            "label": "accountExecutedLiquidityOrders",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_array(t_struct(LiquidityOrder)32942_storage)dyn_storage)",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:91"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(LiquidityOrder)32942_storage)dyn_storage": {
            "label": "struct ILiquidityHandler.LiquidityOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(LiquidityOrderStatus)32916": {
            "label": "enum ILiquidityHandler.LiquidityOrderStatus",
            "members": [
              "PENDING",
              "SUCCESS",
              "FAIL"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(LiquidityOrder)32942_storage)dyn_storage)": {
            "label": "mapping(address => struct ILiquidityHandler.LiquidityOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(LiquidityOrder)32942_storage": {
            "label": "struct ILiquidityHandler.LiquidityOrder",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minOut",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "actualAmountOut",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "executedTimestamp",
                "type": "t_uint48",
                "offset": 26,
                "slot": "5"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "isAdd",
                "type": "t_bool",
                "offset": 20,
                "slot": "6"
              },
              {
                "label": "isNativeOut",
                "type": "t_bool",
                "offset": 21,
                "slot": "6"
              },
              {
                "label": "status",
                "type": "t_enum(LiquidityOrderStatus)32916",
                "offset": 22,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0a5391adc430fe4efffb0c9506fb07f72b8765b2cf034a42cd608fea4152d045": {
      "address": "0x35fA2a482789bd0Cd1818c83Cc030050008fbe72",
      "txHash": "0x351e659276661d23b52d2ed533ca81a631238279eb12171befe342335c575de4",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "sglp",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)9159",
            "contract": "StakedGlpStrategy",
            "src": "src/strategies/StakedGlpStrategy.sol:19"
          },
          {
            "label": "rewardToken",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IERC20Upgradeable)9159",
            "contract": "StakedGlpStrategy",
            "src": "src/strategies/StakedGlpStrategy.sol:20"
          },
          {
            "label": "rewardRouter",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IGmxRewardRouterV2)36150",
            "contract": "StakedGlpStrategy",
            "src": "src/strategies/StakedGlpStrategy.sol:22"
          },
          {
            "label": "rewardTracker",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IGmxRewardTracker)36179",
            "contract": "StakedGlpStrategy",
            "src": "src/strategies/StakedGlpStrategy.sol:23"
          },
          {
            "label": "glpManager",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(IGmxGlpManager)36112",
            "contract": "StakedGlpStrategy",
            "src": "src/strategies/StakedGlpStrategy.sol:24"
          },
          {
            "label": "oracleMiddleware",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IOracleMiddleware)41123",
            "contract": "StakedGlpStrategy",
            "src": "src/strategies/StakedGlpStrategy.sol:26"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "107",
            "type": "t_contract(IVaultStorage)57314",
            "contract": "StakedGlpStrategy",
            "src": "src/strategies/StakedGlpStrategy.sol:27"
          },
          {
            "label": "whitelistExecutors",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakedGlpStrategy",
            "src": "src/strategies/StakedGlpStrategy.sol:29"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "StakedGlpStrategy",
            "src": "src/strategies/StakedGlpStrategy.sol:31"
          },
          {
            "label": "strategyBps",
            "offset": 20,
            "slot": "109",
            "type": "t_uint16",
            "contract": "StakedGlpStrategy",
            "src": "src/strategies/StakedGlpStrategy.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)9159": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IGmxGlpManager)36112": {
            "label": "contract IGmxGlpManager",
            "numberOfBytes": "20"
          },
          "t_contract(IGmxRewardRouterV2)36150": {
            "label": "contract IGmxRewardRouterV2",
            "numberOfBytes": "20"
          },
          "t_contract(IGmxRewardTracker)36179": {
            "label": "contract IGmxRewardTracker",
            "numberOfBytes": "20"
          },
          "t_contract(IOracleMiddleware)41123": {
            "label": "contract IOracleMiddleware",
            "numberOfBytes": "20"
          },
          "t_contract(IVaultStorage)57314": {
            "label": "contract IVaultStorage",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
