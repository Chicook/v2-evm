{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x78368178f4C583921CfcA85A850efbA35527D40f",
    "txHash": "0x9a57320176887d518d4bb615b763b69fa7920290045c1a4acc98fee5b6bf3b23"
  },
  "proxies": [
    {
      "address": "0xC5132016A4376f018C3B6321d2b3eB35Ceb1145f",
      "txHash": "0xa5f1301f94fb68ccae6203344d8d6607cafb8653efdd4fd7bed5c9171c35fad9",
      "kind": "transparent"
    },
    {
      "address": "0x55C3C96D346f87F65B6a500bb7b62Df023BaC726",
      "txHash": "0xc33bd3cefaaf51696f47fca1be62e5a4b712715f8a3c79fcbb917a7e0b0e7a69",
      "kind": "transparent"
    },
    {
      "address": "0x7D023383E8AD624445655fD5732786a602c8B82D",
      "txHash": "0xab2f17670f233e28a85d0bdb09b2d47194d0193dcd278c0ea7b2df796cd2680e",
      "kind": "transparent"
    },
    {
      "address": "0x54d7818274E4F0E7ef222884c10E852F7cc14276",
      "txHash": "0xef0b3261890b91e2351310bdfb2f6f3ce7ea3d4c04fafe4a7209ee6e75508fea",
      "kind": "transparent"
    },
    {
      "address": "0xE0F6A9D50420e4415D4d378b2976685Dc7c6a9b3",
      "txHash": "0x475e9a4b2c1eaf81f3229f7c1dd24fd7027fcfca49a04db7e141452d85e9b980",
      "kind": "transparent"
    },
    {
      "address": "0x22eF364C9e06f934d6F5334bc6faC2321De2Ac1b",
      "txHash": "0xd1f9424d0acada7318b1ce82fbb3cb8ee113839439a28c02dfafb7a1bd98fe6d",
      "kind": "transparent"
    },
    {
      "address": "0xC138582ed381480856712A9607aB5537a2D5ee11",
      "txHash": "0x3d2973e2607a564ea64c30ef3c8b9cce37adc2b35a6c3f0186ba20a392c242bd",
      "kind": "transparent"
    },
    {
      "address": "0xF15b286430987c2AD302e974C33AB99c68787b86",
      "txHash": "0x931ddd89823a0a39bcd135830df91f0909d5e5fa10a1c88747b52f58a4f8ab64",
      "kind": "transparent"
    },
    {
      "address": "0x69F493e47C2793AbA58AbC5c1aaaA1d6DB60b608",
      "txHash": "0xccfa0f01230849d589477c8ac3dcc48d99b3f51b31a66ebe45954521b751d0a8",
      "kind": "transparent"
    },
    {
      "address": "0xC44b8fb84B61AcEa1D46665999f4b0543AA1aF3B",
      "txHash": "0x2edcd2631c4d8e12abddd61cae0df7b1cebe3066baaa6363170fd7d5a969ea06",
      "kind": "transparent"
    },
    {
      "address": "0x23aD59C8a7595dBa1F3D6225587F2707C4962563",
      "txHash": "0xad80d126258974bc8e9e175a6abb41faf81ccb8fd43494f470c96b1ae72d613f",
      "kind": "transparent"
    },
    {
      "address": "0x951711a021DC9Bb99b0873CcBfF2518414C2021F",
      "txHash": "0x174f2ff5a7b043c999478d60488af8e2c619c40fe0f4421e294117b3868f24cf",
      "kind": "transparent"
    },
    {
      "address": "0x814F2114688B445a8D3b74b1ed638c1354B2732c",
      "txHash": "0x20feffb27f13fb90f9ecbf0245a2a92af24ecec46ef9f3a04d4ccca5798b3852",
      "kind": "transparent"
    },
    {
      "address": "0xF738a396c235Ab83bbfE114BdfFD7fC3689215fE",
      "txHash": "0xef1812093c23849235a31fe71ab659cb7a55e45665626da4c4ed119b99b9d1da",
      "kind": "transparent"
    },
    {
      "address": "0x15572397121B9838DCcEc6aaEd889934eC02af4C",
      "txHash": "0x53bd4989bc31ad4bc003930ec2fabb0f1f9ca6d9d48a83b0ca2f3f7c6a2b18b7",
      "kind": "transparent"
    }
  ],
  "impls": {
    "601462ba227fbc06f0d08189084add45d4403eba6e95738aa253afe2449f7270": {
      "address": "0x9375e7eE3a50E82D5C5CB34cf6AB2d8AdE4B469f",
      "txHash": "0x48ddbc7a14f00d04f0be6fdfb1f90482cea159d9911b0c9ab9d8361dff0a612a",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "positionManagers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:52"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:53"
          },
          {
            "label": "liquidationService",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:54"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "74d8c7f0fad33c1512fe748b7dd0afa4dfa048d6150759dca121323df8bfd2d9": {
      "address": "0x5A11B2328862527151fD2e7EaE02455E2e6b1d31",
      "txHash": "0xf5ff608ed9a849dfbafb0d915f5ba90b44ca5404cbc4955decc2f69adc0d1e82",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "prices",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:20"
          },
          {
            "label": "minPublishTime",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:24"
          },
          {
            "label": "publishTimeDiff",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:27"
          },
          {
            "label": "mapAssetIdToIndex",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:29"
          },
          {
            "label": "assetIds",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:30"
          },
          {
            "label": "indexCount",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:31"
          },
          {
            "label": "isUpdaters",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "EcoPyth",
            "src": "src/oracles/EcoPyth.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a3ea426e4c71b7cb6083a4ab2e887bac8d8b7a9168cfb30554c608b22c4481b4": {
      "address": "0x11c0f8dc5d9eE6B57fd40031917e2f4d89da5063",
      "txHash": "0x6dddb847223faf1d1f98a13c9949c5e80f75d1838e65204c19d05fd9db59b6be",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IReadablePyth)20732",
            "contract": "PythAdapter",
            "src": "src/oracles/PythAdapter.sol:17"
          },
          {
            "label": "configs",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_bytes32,t_struct(PythPriceConfig)20692_storage)",
            "contract": "PythAdapter",
            "src": "src/oracles/PythAdapter.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IReadablePyth)20732": {
            "label": "contract IReadablePyth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_struct(PythPriceConfig)20692_storage)": {
            "label": "mapping(bytes32 => struct IPythAdapter.PythPriceConfig)",
            "numberOfBytes": "32"
          },
          "t_struct(PythPriceConfig)20692_storage": {
            "label": "struct IPythAdapter.PythPriceConfig",
            "members": [
              {
                "label": "pythPriceId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inverse",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "057d9dcf15e02a36197460656b597162d6e15977634b80d60237bd1ed112783d": {
      "address": "0x00740689eACEedbcea4b91bC378Da4c862F98E90",
      "txHash": "0x4b225c052b39f336ec2f4b22e6bb1bf305ec00ea3132f6e364c61353f1f531cc",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "sGlp",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1063",
            "contract": "StakedGlpOracleAdapter",
            "src": "src/oracles/StakedGlpOracleAdapter.sol:14"
          },
          {
            "label": "glpManager",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IGmxGlpManager)16574",
            "contract": "StakedGlpOracleAdapter",
            "src": "src/oracles/StakedGlpOracleAdapter.sol:15"
          },
          {
            "label": "sGlpAssetId",
            "offset": 0,
            "slot": "103",
            "type": "t_bytes32",
            "contract": "StakedGlpOracleAdapter",
            "src": "src/oracles/StakedGlpOracleAdapter.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)1063": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IGmxGlpManager)16574": {
            "label": "contract IGmxGlpManager",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d04cbbc9c8157a29415f554155b6e074f86055de64d4a539fcedc56b13eafd1a": {
      "address": "0xa3Ad18ed20224f8043C465Dd388b1d40122858f6",
      "txHash": "0x52bd0092053a23006da5503f44965d285e9e4521463bfaafaa8b2386d2bbb46b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "isUpdater",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "OracleMiddleware",
            "src": "src/oracles/OracleMiddleware.sol:42"
          },
          {
            "label": "assetPriceConfigs",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_bytes32,t_struct(AssetPriceConfig)18785_storage)",
            "contract": "OracleMiddleware",
            "src": "src/oracles/OracleMiddleware.sol:43"
          },
          {
            "label": "marketStatus",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "contract": "OracleMiddleware",
            "src": "src/oracles/OracleMiddleware.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AssetPriceConfig)18785_storage)": {
            "label": "mapping(bytes32 => struct OracleMiddleware.AssetPriceConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)",
            "numberOfBytes": "32"
          },
          "t_struct(AssetPriceConfig)18785_storage": {
            "label": "struct OracleMiddleware.AssetPriceConfig",
            "members": [
              {
                "label": "trustPriceAge",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "confidenceThresholdE6",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "adapter",
                "type": "t_address",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bbd4d73751755b5297d1a04cd133e85ac38dfbe0ef37a60fa16e38164d45eb3f": {
      "address": "0x01F488b7446A4d96424a0DAC097C3aFEf9BaF626",
      "txHash": "0x8ce0be77ab4d4280a0fda75fc9fdb37c06c839bbf18853acd7eebd509d85e3aa",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "liquidityConfig",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(LiquidityConfig)33970_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:52"
          },
          {
            "label": "swapConfig",
            "offset": 0,
            "slot": "103",
            "type": "t_struct(SwapConfig)33975_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:53"
          },
          {
            "label": "tradingConfig",
            "offset": 0,
            "slot": "104",
            "type": "t_struct(TradingConfig)33984_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:54"
          },
          {
            "label": "liquidationConfig",
            "offset": 0,
            "slot": "107",
            "type": "t_struct(LiquidationConfig)33987_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:55"
          },
          {
            "label": "allowedLiquidators",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:57"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:58"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:60"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:61"
          },
          {
            "label": "plp",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:62"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "113",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:63"
          },
          {
            "label": "pnlFactorBPS",
            "offset": 20,
            "slot": "113",
            "type": "t_uint32",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:64"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "114",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:65"
          },
          {
            "label": "tokenAssetIds",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:68"
          },
          {
            "label": "assetConfigs",
            "offset": 0,
            "slot": "116",
            "type": "t_mapping(t_bytes32,t_struct(AssetConfig)33899_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:70"
          },
          {
            "label": "plpAssetIds",
            "offset": 0,
            "slot": "117",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:72"
          },
          {
            "label": "assetPlpTokenConfigs",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_bytes32,t_struct(PLPTokenConfig)33908_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:73"
          },
          {
            "label": "collateralAssetIds",
            "offset": 0,
            "slot": "119",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:75"
          },
          {
            "label": "assetCollateralTokenConfigs",
            "offset": 0,
            "slot": "120",
            "type": "t_mapping(t_bytes32,t_struct(CollateralTokenConfig)33915_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:76"
          },
          {
            "label": "marketConfigs",
            "offset": 0,
            "slot": "121",
            "type": "t_array(t_struct(MarketConfig)33948_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:78"
          },
          {
            "label": "assetClassConfigs",
            "offset": 0,
            "slot": "122",
            "type": "t_array(t_struct(AssetClassConfig)33951_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:79"
          },
          {
            "label": "tradeServiceHooks",
            "offset": 0,
            "slot": "123",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:80"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(AssetClassConfig)33951_storage)dyn_storage": {
            "label": "struct IConfigStorage.AssetClassConfig[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MarketConfig)33948_storage)dyn_storage": {
            "label": "struct IConfigStorage.MarketConfig[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AssetConfig)33899_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.AssetConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(CollateralTokenConfig)33915_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.CollateralTokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(PLPTokenConfig)33908_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.PLPTokenConfig)",
            "numberOfBytes": "32"
          },
          "t_struct(AssetClassConfig)33951_storage": {
            "label": "struct IConfigStorage.AssetClassConfig",
            "members": [
              {
                "label": "baseBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(AssetConfig)33899_storage": {
            "label": "struct IConfigStorage.AssetConfig",
            "members": [
              {
                "label": "tokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "decimals",
                "type": "t_uint8",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isStableCoin",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CollateralTokenConfig)33915_storage": {
            "label": "struct IConfigStorage.CollateralTokenConfig",
            "members": [
              {
                "label": "settleStrategy",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "collateralFactorBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 24,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FundingRate)33920_storage": {
            "label": "struct IConfigStorage.FundingRate",
            "members": [
              {
                "label": "maxSkewScaleUSD",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxFundingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(LiquidationConfig)33987_storage": {
            "label": "struct IConfigStorage.LiquidationConfig",
            "members": [
              {
                "label": "liquidationFeeUSDE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LiquidityConfig)33970_storage": {
            "label": "struct IConfigStorage.LiquidityConfig",
            "members": [
              {
                "label": "plpTotalTokenWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "plpSafetyBufferBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taxFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "flashLoanFeeRateBPS",
                "type": "t_uint32",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "maxPLPUtilizationBPS",
                "type": "t_uint32",
                "offset": 12,
                "slot": "1"
              },
              {
                "label": "depositFeeRateBPS",
                "type": "t_uint32",
                "offset": 16,
                "slot": "1"
              },
              {
                "label": "withdrawFeeRateBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "dynamicFeeEnabled",
                "type": "t_bool",
                "offset": 24,
                "slot": "1"
              },
              {
                "label": "enabled",
                "type": "t_bool",
                "offset": 25,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MarketConfig)33948_storage": {
            "label": "struct IConfigStorage.MarketConfig",
            "members": [
              {
                "label": "assetId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxLongPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxShortPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "increasePositionFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "decreasePositionFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "3"
              },
              {
                "label": "initialMarginFractionBPS",
                "type": "t_uint32",
                "offset": 8,
                "slot": "3"
              },
              {
                "label": "maintenanceMarginFractionBPS",
                "type": "t_uint32",
                "offset": 12,
                "slot": "3"
              },
              {
                "label": "maxProfitRateBPS",
                "type": "t_uint32",
                "offset": 16,
                "slot": "3"
              },
              {
                "label": "minLeverageBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "3"
              },
              {
                "label": "assetClass",
                "type": "t_uint8",
                "offset": 24,
                "slot": "3"
              },
              {
                "label": "allowIncreasePosition",
                "type": "t_bool",
                "offset": 25,
                "slot": "3"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 26,
                "slot": "3"
              },
              {
                "label": "fundingRate",
                "type": "t_struct(FundingRate)33920_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(PLPTokenConfig)33908_storage": {
            "label": "struct IConfigStorage.PLPTokenConfig",
            "members": [
              {
                "label": "targetWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "bufferLiquidity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxWeightDiff",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(SwapConfig)33975_storage": {
            "label": "struct IConfigStorage.SwapConfig",
            "members": [
              {
                "label": "stablecoinSwapFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "swapFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TradingConfig)33984_storage": {
            "label": "struct IConfigStorage.TradingConfig",
            "members": [
              {
                "label": "fundingInterval",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minProfitDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "devFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPosition",
                "type": "t_uint8",
                "offset": 4,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d1c19dedee3c5e80a4c904bf3654b7b232df24f623e25b14c056892ea632697e": {
      "address": "0xf1A5509BaC7FeD77647507B4840003608CFAb025",
      "txHash": "0x84ec690261b476faba78210a78a86cec40e3a198e0ec6fc0497e7709ce4e8375",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "globalState",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(GlobalState)34337_storage",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:29"
          },
          {
            "label": "positions",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_struct(Position)34386_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:31"
          },
          {
            "label": "subAccountPositionIds",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:32"
          },
          {
            "label": "subAccountBorrowingFee",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:33"
          },
          {
            "label": "markets",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_struct(Market)34365_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:34"
          },
          {
            "label": "assetClasses",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_uint256,t_struct(AssetClass)34348_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:35"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Position)34386_storage)": {
            "label": "mapping(bytes32 => struct IPerpStorage.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AssetClass)34348_storage)": {
            "label": "mapping(uint256 => struct IPerpStorage.AssetClass)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Market)34365_storage)": {
            "label": "mapping(uint256 => struct IPerpStorage.Market)",
            "numberOfBytes": "32"
          },
          "t_struct(AssetClass)34348_storage": {
            "label": "struct IPerpStorage.AssetClass",
            "members": [
              {
                "label": "reserveValueE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sumBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastBorrowingTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "sumBorrowingFeeE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sumSettledBorrowingFeeE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(GlobalState)34337_storage": {
            "label": "struct IPerpStorage.GlobalState",
            "members": [
              {
                "label": "reserveValueE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Market)34365_storage": {
            "label": "struct IPerpStorage.Market",
            "members": [
              {
                "label": "longPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "longAvgPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "shortPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "shortAvgPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "currentFundingRate",
                "type": "t_int256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastFundingTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "accumFundingLong",
                "type": "t_int256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "accumFundingShort",
                "type": "t_int256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(Position)34386_storage": {
            "label": "struct IPerpStorage.Position",
            "members": [
              {
                "label": "primaryAccount",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "avgEntryPriceE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "entryBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "reserveValueE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastIncreaseTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "positionSizeE30",
                "type": "t_int256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "realizedPnl",
                "type": "t_int256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "entryFundingRate",
                "type": "t_int256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c1e85298fbd6201f410edf4abc53ae66797a1a29efd8497d6e70034a8ea58988": {
      "address": "0xfdae5977d844F3eA33B1d7c5cC947F6D110A4CD2",
      "txHash": "0xa5dc54d69ead3c5e419b3ff8c8f3b0dba95cc3a92712a8da94f430d1c629eab1",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "154",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "155",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "minters",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PLPv2",
            "src": "src/contracts/PLPv2.sol:12"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e8f2fa1a7c8feb223f3072a3897df0750d979ae9a9e5a0cd31d70e8db7467599": {
      "address": "0x6199752F181dC74fCf887F9F0f7B7B6Eb26D5A7B",
      "txHash": "0x84a5f3b2421805ddd1e95ce4931311f3fb325d183ddf70dce8dd6d80ed25a2e3",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "totalAmount",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:29"
          },
          {
            "label": "plpLiquidity",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:30"
          },
          {
            "label": "protocolFees",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:31"
          },
          {
            "label": "plpLiquidityDebtUSDE30",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:33"
          },
          {
            "label": "fundingFeeReserve",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:34"
          },
          {
            "label": "devFees",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:36"
          },
          {
            "label": "tradingFeeDebt",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:38"
          },
          {
            "label": "borrowingFeeDebt",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:39"
          },
          {
            "label": "fundingFeeDebt",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:40"
          },
          {
            "label": "lossDebt",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:41"
          },
          {
            "label": "globalTradingFeeDebt",
            "offset": 0,
            "slot": "161",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:43"
          },
          {
            "label": "globalBorrowingFeeDebt",
            "offset": 0,
            "slot": "162",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:44"
          },
          {
            "label": "globalFundingFeeDebt",
            "offset": 0,
            "slot": "163",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:45"
          },
          {
            "label": "globalLossDebt",
            "offset": 0,
            "slot": "164",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:46"
          },
          {
            "label": "traderBalances",
            "offset": 0,
            "slot": "165",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:49"
          },
          {
            "label": "traderTokens",
            "offset": 0,
            "slot": "166",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:51"
          },
          {
            "label": "strategyAllowances",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:53"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "168",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c31c0cfdd76278c4addda270e2ff84fc5e91aea528915a4661f2b4bce4e6df5d": {
      "address": "0x66B7b19E1A8D2DdED0566ce386c9bCEB7F4177ec",
      "txHash": "0xcfd78409d75a3c76a631ffdc98d6ab9204fef1a1fd77ffaa46e1e0b946c23779",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:29"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:30"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:31"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2295abae5890458a8369fa042f33efe09f0b235e1bbeb18edb7cc4e99134d03d": {
      "address": "0xF6f3a0d0235ada6d2C32203fAF93fA8eCa0b408a",
      "txHash": "0x6b692a69e04ca81d33fca9cfd54bb5ebf23f846c5eed2bbde02499b9dc28eb54",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:131"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:132"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:133"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(Calculator)7637",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:134"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Calculator)7637": {
            "label": "contract Calculator",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c82ff89455e1997e86c648af9516eb75db7cacb49e7d4bb22fbd5404eca87428": {
      "address": "0x7Eddffc6017453042122a14e9047Eda2E839604C",
      "txHash": "0xd62f0718f5435dba914bb4e99606329930456516e292d50b6da469e7b6bef86a",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:54"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:55"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:56"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6ba04bc46ddd107d81bddacff01cb32e70a33c76c8f388697f5b1d666623eb47": {
      "address": "0xBF93902A694c6D534511B0a42aD0C52bFC7b76e1",
      "txHash": "0x0f66bca8789976f96b9237f0aaea91cbef0adc78bb19ef84daa454f775e23546",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:48"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:49"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:50"
          },
          {
            "label": "tradeHelper",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:51"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(Calculator)7637",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Calculator)7637": {
            "label": "contract Calculator",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "baccda0c199efaf32150d9bc90eb8d984c99a550e3b1533cab130b2f40186144": {
      "address": "0x9A42592F185ff66C2ec805B88d5a82f0B4d55DA1",
      "txHash": "0x1b0c952f9c2f0ffe30b7f70dbda9845880f18d12c6f38e49fa691faa906be959",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "LiquidityService",
            "src": "src/services/LiquidityService.sol:49"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "52",
            "type": "t_address",
            "contract": "LiquidityService",
            "src": "src/services/LiquidityService.sol:50"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "53",
            "type": "t_address",
            "contract": "LiquidityService",
            "src": "src/services/LiquidityService.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "52e04c4cb555c3f4b68521800d26634bef8529b1bc795aa9e1c903b6029ef2db": {
      "address": "0x41d16B98bfC70B6C71786F5E04cd466439e7cea5",
      "txHash": "0x688ede58fe083f6a9ea77cbb4b6ae946322aab56e997506a38dc511f1caa4d33",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:133"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:134"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:135"
          },
          {
            "label": "tradeHelper",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:136"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(Calculator)7637",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:137"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Calculator)7637": {
            "label": "contract Calculator",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
